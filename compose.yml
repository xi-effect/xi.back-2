services:
  mq:
    image: rabbitmq:3.12.10-management-alpine
    volumes:
      - type: tmpfs
        target: /var/lib/rabbitmq/
    ports:
      - target: 5672
        host_ip: 127.0.0.1
        published: 5672
      - target: 15672
        host_ip: 127.0.0.1
        published: 15672
    healthcheck:
      test: rabbitmq-diagnostics -q check_port_connectivity
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  db:
    image: postgres:16.1-alpine
    environment:
      PGUSER: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
      # POSTGRES_EXTENSIONS: pg_trgm
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
      - type: bind
        source: ./init-schema.sql
        target: /docker-entrypoint-initdb.d/init-schema.sql
    ports:
      - target: 5432
        host_ip: 127.0.0.1
        published: 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "test", "-U", "test"]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  alembic:
    profiles:
      - migration
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./alembic
        target: /backend/alembic
      - type: bind
        source: ./alembic.ini
        target: /backend/alembic.ini
    environment:
      DB_LINK: postgresql+asyncpg://test:test@db:5432/test
      DB_SCHEMA: xi_back_2
    entrypoint: sh

  api:
    profiles:
      - app
    depends_on:
      mq:
        condition: service_healthy
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command:
      - "--reload"
    ports:
      - target: 8000
        host_ip: 127.0.0.1
        published: 5000
    volumes:
      - type: bind
        source: ./app
        target: /backend/app
      - type: bind
        source: ./tests
        target: /backend/tests
    environment:
      WATCHFILES_FORCE_POLLING: true
      DB_LINK: postgresql+asyncpg://test:test@db:5432/test
      MQ_URL: amqp://guest:guest@mq
      DB_SCHEMA: xi_back_2
      # DATABASE_MIGRATED: "1"
