"""classrooms

Revision ID: 038
Revises: 037
Create Date: 2025-08-30 23:13:11.524591

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "038"
down_revision: Union[str, None] = "037"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.drop_index(
        "hash_index_tutor_invitations_code",
        table_name="tutor_invitations",
        schema="xi_back_2",
        postgresql_using="hash",
    )
    op.drop_table("tutor_invitations", schema="xi_back_2")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "classrooms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tutor_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "kind", sa.Enum("INDIVIDUAL", "GROUP", name="classroomkind"), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "PAUSED", "LOCKED", "FINISHED", name="classroomstatus"),
            nullable=False,
        ),
        sa.Column("tutor_name", sa.String(length=100), nullable=True),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.Column("student_name", sa.String(length=100), nullable=True),
        sa.Column("group_name", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classrooms")),
        schema="xi_back_2",
    )
    op.create_index(
        op.f("ix_xi_back_2_classrooms_tutor_id"),
        "classrooms",
        ["tutor_id"],
        unique=False,
        schema="xi_back_2",
    )
    op.create_table(
        "tutorships",
        sa.Column("tutor_id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("active_classroom_count", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "tutor_id != student_id",
            name=op.f("ck_tutorships_check_tutorship_tutor_id_ne_student_id"),
        ),
        sa.PrimaryKeyConstraint("tutor_id", "student_id", name=op.f("pk_tutorships")),
        schema="xi_back_2",
    )
    op.create_table(
        "enrollments",
        sa.Column("group_classroom_id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_classroom_id"],
            ["xi_back_2.classrooms.id"],
            name=op.f("fk_enrollments_group_classroom_id_classrooms"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "group_classroom_id", "student_id", name=op.f("pk_enrollments")
        ),
        schema="xi_back_2",
    )
    op.create_index(
        op.f("ix_xi_back_2_enrollments_group_classroom_id"),
        "enrollments",
        ["group_classroom_id"],
        unique=False,
        schema="xi_back_2",
    )
    op.create_index(
        op.f("ix_xi_back_2_enrollments_student_id"),
        "enrollments",
        ["student_id"],
        unique=False,
        schema="xi_back_2",
    )
    op.create_table(
        "tutor_invitations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "kind", sa.Enum("INDIVIDUAL", "GROUP", name="classroomkind"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("code", sa.CHAR(length=10), nullable=False),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("tutor_id", sa.Integer(), nullable=True),
        sa.Column("group_classroom_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_classroom_id"],
            ["xi_back_2.classrooms.id"],
            name=op.f("fk_tutor_invitations_group_classroom_id_classrooms"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tutor_invitations")),
        schema="xi_back_2",
    )
    op.create_index(
        op.f("ix_xi_back_2_tutor_invitations_code"),
        "tutor_invitations",
        ["code"],
        unique=True,
        schema="xi_back_2",
    )
    op.create_index(
        op.f("ix_xi_back_2_tutor_invitations_group_classroom_id"),
        "tutor_invitations",
        ["group_classroom_id"],
        unique=True,
        schema="xi_back_2",
    )
    op.create_index(
        op.f("ix_xi_back_2_tutor_invitations_tutor_id"),
        "tutor_invitations",
        ["tutor_id"],
        unique=False,
        schema="xi_back_2",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_xi_back_2_tutor_invitations_tutor_id"),
        table_name="tutor_invitations",
        schema="xi_back_2",
    )
    op.drop_index(
        op.f("ix_xi_back_2_tutor_invitations_group_classroom_id"),
        table_name="tutor_invitations",
        schema="xi_back_2",
    )
    op.drop_index(
        op.f("ix_xi_back_2_tutor_invitations_code"),
        table_name="tutor_invitations",
        schema="xi_back_2",
    )
    op.drop_table("tutor_invitations", schema="xi_back_2")
    op.drop_index(
        op.f("ix_xi_back_2_enrollments_student_id"),
        table_name="enrollments",
        schema="xi_back_2",
    )
    op.drop_index(
        op.f("ix_xi_back_2_enrollments_group_classroom_id"),
        table_name="enrollments",
        schema="xi_back_2",
    )
    op.drop_table("enrollments", schema="xi_back_2")
    op.drop_table("tutorships", schema="xi_back_2")
    op.drop_index(
        op.f("ix_xi_back_2_classrooms_tutor_id"),
        table_name="classrooms",
        schema="xi_back_2",
    )
    op.drop_table("classrooms", schema="xi_back_2")
    # ### end Alembic commands ###

    bind = op.get_bind()

    sa.Enum(name="classroomkind").drop(bind=bind)
    sa.Enum(name="classroomstatus").drop(bind=bind)

    op.create_table(
        "tutor_invitations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tutor_id", sa.Integer(), nullable=False),
        sa.Column("code", sa.CHAR(length=10), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tutor_invitations")),
        sa.UniqueConstraint("code", name=op.f("uq_tutor_invitations_code")),
        schema="xi_back_2",
    )
    op.create_index(
        "hash_index_tutor_invitations_code",
        "tutor_invitations",
        ["code"],
        unique=False,
        schema="xi_back_2",
        postgresql_using="hash",
    )
