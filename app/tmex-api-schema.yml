openapi: 3.0.1
info:
  title: xi.back-2
  version: v0.0.5
paths:
# community-participation
  /!SUB!/user-room/create-community/:
    head:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community.FullResponseSchema'
  /!PUB!/create-community/:
    trace:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Community.FullInputSchema'
              required:
                - data
      responses:
        '200':
          description: Success
          headers:
            "Enter Room":
              description: "community-room"
              schema:
                type: string
            "Enter Room ":
              description: "participant-room"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipationModel'
  /!SUB!/user-room/join-community/:
    head:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community.FullResponseSchema'
  /!PUB!/test-join-community/:
    trace:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
                - community_id
      responses:
        '200':
          description: Success
          headers:
            "Enter Room":
              description: "community-room"
              schema:
                type: string
            "Enter Room ":
              description: "participant-room"
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipationModel'
        '404':
          $ref: "#/components/errors/CommunityNotFound"
        '409':
          description: Already joined
          content:
            application/json:
              schema:
                type: string
                const: "Already joined"
                example: "Already joined"
  /!SUB!/participant-room/kicked-from-community/:
    head:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
              - community_id
  /!SUB!/participant-room/update-participation/:
    head:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
                participant:
                  $ref: '#/components/schemas/Participant.CurrentSchema'
              required:
              - community_id
              - participant
  /!SUB!/participant-room/leave-community/:
    head:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
  /!PUB!/leave-community/:
    trace:
      tags:
        - community-participation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
                - community_id
      responses:
        '204':
          description: Success
          headers:
            "Leave Room":
              description: "community-room"
              schema:
                type: string
            "Close Room ":
              description: "participant-room"
              schema:
                type: string
            "Leave Room  ":
              description: "participants-list-room"
              schema:
                type: string
        '404':
          $ref: "#/components/errors/CommunityNotFound"
        '403':
          $ref: "#/components/errors/NoAccessToCommunity"
        '409':
          description: Owner can not leave
          content:
            application/json:
              schema:
                type: string
                const: "Owner can not leave"
                example: "Owner can not leave"
# communities-list
  /!PUB!/list-communities/:
    trace:
      tags:
        - communities-list
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Community.FullResponseSchema'
  /!PUB!/retrieve-community/:
    trace:
      tags:
        - communities-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
                - community_id
      responses:
        '200':
          description: Success
          headers:
            "Enter Room":
              description: "community-room"
              schema:
                type: string
            "Enter Room ":
              description: "participant-room"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipationModel'
        '403':
          $ref: "#/components/errors/NoAccessToCommunity"
        '404':
          $ref: "#/components/errors/CommunityNotFound"
  /!PUB!/retrieve-any-community/:
    trace:
      tags:
        - communities-list
      responses:
        '200':
          description: Success
          headers:
            "Enter Room":
              description: "community-room"
              schema:
                type: string
            "Enter Room ":
              description: "participant-room"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipationModel'
        '404':
          $ref: "#/components/errors/CommunityNotFound"
  /!PUB!/close-community/:
    trace:
      tags:
        - communities-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
                - community_id
      responses:
        '204':
          description: Success
          headers:
            "Leave Room":
              description: "community-room"
              schema:
                type: string
            "Leave Room ":
              description: "participant-room"
              schema:
                type: string
            "Leave Room  ":
              description: "participants-list-room"
              schema:
                type: string
# community-meta-admin
  /!SUB!/community-room/update-community/:
    head:
      tags:
        - community-meta-admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community.FullResponseSchema'
  /!PUB!/update-community/:
    trace:
      tags:
        - community-meta-admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
                data:
                  $ref: '#/components/schemas/Community.FullInputSchema'
              required:
                - community_id
                - data
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community.FullResponseSchema'
        '403 ':
          $ref: "#/components/errors/NoAccessToCommunity"
        '403  ':
          $ref: "#/components/errors/NotSufficientPermissions"
        '404 ':
          $ref: "#/components/errors/CommunityNotFound"
  /!SUB!/community-room/delete-community/:
    head:
      tags:
        - community-meta-admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
  /!PUB!/delete-community/:
    trace:
      tags:
        - community-meta-admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
                - community_id
      responses:
        '204 ':
          description: Success
          headers:
            "Close Room":
              description: "community-room"
              schema:
                type: string
            "Close Room ":
              description: "participant-list-room"
              schema:
                type: string
        '404 ':
          $ref: "#/components/errors/CommunityNotFound"
        '403 ':
          $ref: "#/components/errors/NoAccessToCommunity"
        '403  ':
          $ref: "#/components/errors/NotSufficientPermissions"
# participants-list
  /!PUB!/list-participants/:
    trace:
      tags:
        - participants-list
      responses:
        '200':
          description: Success
          headers:
            "Enter Room":
              description: "participants-list-room"
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant.ListItemSchema'
  /!SUB!/participants-list-room/create-participant/:
    head:
      tags:
        - participants-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
                participant:
                  $ref: '#/components/schemas/Participant.ListItemSchema'
              required:
              - community_id
              - participant
  /!SUB!/participants-list-room/delete-participant/:
    head:
      tags:
        - participants-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantIds'
  /!PUB!/kick-participant/:
    trace:
      tags:
        - participants-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantIds'
      responses:
        '204 ':
          description: Success
        '404 ':
          $ref: "#/components/errors/CommunityNotFound"
        '404  ':
          $ref: "#/components/errors/ParticipantNotFound"
        '403 ':
          $ref: "#/components/errors/NoAccessToCommunity"
        '403  ':
          $ref: "#/components/errors/NotSufficientPermissions"
        '403   ':
          $ref: "#/components/errors/NotSufficientPermissions"
        '409 ':
          description: Owner can be kicked
          content:
            application/json:
              schema:
                type: string
                const: "Owner can be kicked"
                example: "Owner can be kicked"
  /!SUB!/participants-list-room/update-participants/:
    head:
      tags:
        - participants-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
                participants:
                  type: array
                  items:
                    $ref: '#/components/schemas/Participant.ListItemSchema'
              required:
              - community_id
              - participants
  /!PUB!/transfer-ownership/:
    trace:
      tags:
        - participants-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantIds'
      responses:
        '204 ':
          description: Success
        '404 ':
          $ref: "#/components/errors/CommunityNotFound"
        '404  ':
          $ref: "#/components/errors/ParticipantNotFound"
        '403 ':
          $ref: "#/components/errors/NoAccessToCommunity"
        '403  ':
          $ref: "#/components/errors/NotSufficientPermissions"
        '403   ':
          $ref: "#/components/errors/NotSufficientPermissions"
  /!PUB!/close-participants/:
    trace:
      tags:
        - participants-list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                community_id:
                  $ref: '#/components/schemas/CommunityId'
              required:
                - community_id
      responses:
        '204':
          description: Success
          headers:
            "Leave Room":
              description: "participants-list-room"
              schema:
                type: string
components:
  errors:
    CommunityNotFound:
      description: Community not found
      content:
        application/json:
          schema:
            type: string
            const: "Community not found"
            example: "Community not found"
    NoAccessToCommunity:
      description: No access to community
      content:
        application/json:
          schema:
            type: string
            const: "No access to community"
            example: "No access to community"
    NotSufficientPermissions:
      description: Not sufficient permissions
      content:
        application/json:
          schema:
            type: string
            const: "Not sufficient permissions"
            example: "Not sufficient permissions"
    ParticipantNotFound:
      description: Participant not found
      content:
        application/json:
          schema:
            type: string
            const: "Participant not found"
            example: "Participant not found"
    TargetIsTheSource:
      description: Target is the source
      content:
        application/json:
          schema:
            type: string
            const: "Target is the source"
            example: "Target is the source"
  schemas:
    CommunityId:
      title: CommunityId
      type: integer
    UserId:
      title: UserId
      type: integer
    ParticipantIds:
      title: ParticipantIds
      type: object
      properties:
        community_id:
          $ref: '#/components/schemas/CommunityId'
        user_id:
          $ref: '#/components/schemas/UserId'
      required:
      - community_id
      - participant_id
    Community.FullResponseSchema:
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          default: null
          title: Description
        id:
          title: Id
          type: integer
        name:
          maxLength: 100
          title: Name
          type: string
      required:
        - id
        - name
      title: Community.FullResponseSchema
      type: object
    Community.FullInputSchema:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        name:
          maxLength: 100
          title: Name
          type: string
      required:
       - name
      title: Community.FullInputSchema
      type: object
    Participant.ListItemSchema:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        is_owner:
          default: false
          title: Is Owner
          type: boolean
        user_id:
          title: User Id
          type: integer
      required:
      - id
      - user_id
      - created_at
      title: Participant.FullResponseSchema
      type: object
    Participant.CurrentSchema:
      properties:
        is_owner:
          default: false
          title: Is Owner
          type: boolean
      required:
      - id
      title: Participant.CurrentSchema
      type: object
    ParticipationModel:
      properties:
        community:
          $ref: '#/components/schemas/Community.FullResponseSchema'
        participant:
          $ref: '#/components/schemas/Participant.CurrentSchema'
      required:
      - community
      - participant
      title: ParticipationModel
      type: object
